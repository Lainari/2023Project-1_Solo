generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model account {
  nickname     String    @id @db.VarChar(10)
  userId       String    @db.VarChar(10)
  userPassword String    @db.VarChar(10)
  isAdmin      Boolean?
  board        board[]
  comment      comment[]
}

model board {
  boardNo   BigInt    @default(autoincrement()) @id @unique
  writer    String    @db.VarChar(10)
  title     String    @db.VarChar(20)
  content   String    @db.Text
  hit       BigInt
  writeDate DateTime  @db.Date
  account   account   @relation(fields: [writer], references: [nickname], onDelete: Cascade, map: "FK_account_TO_board_1")
  comment   comment[]
  image     image[]   @ignore

  @@index([writer], map: "FK_account_TO_board_1")
}


model comment {
  id          Int           @id @default(autoincrement())
  boardNo     BigInt
  nickname    String   @db.VarChar(30)
  comment     String   @db.Text
  commentDate DateTime @db.DateTime(0)
  account     account  @relation(fields: [nickname], references: [nickname], onDelete: Cascade, map: "FK_account_TO_comment_1")
  board       board    @relation(fields: [boardNo], references: [boardNo], onDelete: Cascade, onUpdate: Restrict, map: "FK_board_TO_comment_1")

  @@index([boardNo], map: "FK_board_TO_comment_1")
  @@index([nickname], map: "FK_account_TO_comment_1")
}

model image {
  id             Int     @id @default(autoincrement())
  boardNo       BigInt?
  memberBoardNo BigInt?
  fileName      String  @db.VarChar(50)
  board         board?  @relation(fields: [boardNo], references: [boardNo], onDelete: Cascade, onUpdate: Restrict, map: "FK_board_TO_image_1")
  memberOfTeam  memberOfTeam? @relation(fields: [memberBoardNo], references: [memberBoardNo], onDelete: Cascade, onUpdate: Restrict, map: "FK_memberOfTeam_TO_image_1")

  @@index([boardNo], map: "FK_board_TO_image_1")
  @@index([memberBoardNo], map: "FK_memberOfTeam_TO_image_1")
  @@ignore
}

model memberOfTeam {
  memberBoardNo    BigInt  @id @default(autoincrement())
  memberName       String  @db.VarChar(20)
  introduceContent String? @db.Text
  image            image[] @ignore
}
